<?php

/**
 * Copyright 2014 Fabian Grutschus. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice, this
 *   list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * The views and conclusions contained in the software and documentation are those
 * of the authors and should not be interpreted as representing official policies,
 * either expressed or implied, of the copyright holders.
 *
 * @author    Fabian Grutschus <f.grutschus@lubyte.de>
 * @copyright 2014 Fabian Grutschus. All rights reserved.
 * @license   BSD-2-Clause
 * @link      http://github.com/purr-php/purr
 */

namespace Fabiang\Cludearg\Util;

use Fabiang\Cludearg\Definition\Version as VersionData;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2014-06-23 at 17:26:35.
 */
class VersionTest extends \PHPUnit_Framework_TestCase
{

    /**
     * @var Version
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new Version;
    }

    /**
     * Test finding the most matching version.
     *
     * @param string $version
     * @param array  $versions
     * @param string $expectedVersion
     * @covers Fabiang\Cludearg\Util\Version::findMostMatching
     * @uses Fabiang\Cludearg\Definition\Version
     * @dataProvider provideVersions
     */
    public function testFindMostMatching($version, array $versions, $expectedVersion)
    {
        $versionObjects = array();
        foreach ($versions as $versionOfVersions) {
            $versionObject = new VersionData();
            $versionObject->setVersion($versionOfVersions);
            $versionObjects[] = $versionObject;
        }

        $result = $this->object->findMostMatching($version, $versionObjects);

        if (false === $expectedVersion) {
            $this->assertFalse($result);
        } else {
            $this->assertSame($expectedVersion, $result->getVersion());
        }
    }

    /**
     * @return array
     */
    public function provideVersions()
    {
        return array(
            array(
                'version'         => '1.0.0',
                'versions'        => array('1.*'),
                'expectedVersion' => '1.*'
            ),
            array(
                'version'         => '1.1.0',
                'versions'        => array('1.1.*'),
                'expectedVersion' => '1.1.*'
            ),
            array(
                'version'         => '1.1.0',
                'versions'        => array('1.1.0'),
                'expectedVersion' => '1.1.0'
            ),
            array(
                'version'         => '1.1.0',
                'versions'        => array('1.*', '1.1.*'),
                'expectedVersion' => '1.1.*'
            ),
            array(
                'version'         => '2.1.0',
                'versions'        => array('2.*', '1.1.*'),
                'expectedVersion' => '2.*'
            ),
            array(
                'version'         => '2.1.1',
                'versions'        => array('2.1.1', '2.1.*'),
                'expectedVersion' => '2.1.1'
            ),
            array(
                'version'         => '2.1.1',
                'versions'        => array('2.1.*', '2.1.1'),
                'expectedVersion' => '2.1.1'
            ),
            array(
                'version'         => '23.45.10',
                'versions'        => array('23.*', '23.45.*'),
                'expectedVersion' => '23.45.*'
            ),
            array(
                'version'         => '23.45.10',
                'versions'        => array('23.*', '23.45.10', '23.45.*'),
                'expectedVersion' => '23.45.10'
            ),
            array(
                'version'         => '23.45.10',
                'versions'        => array(),
                'expectedVersion' => false
            ),
            array(
                'version'         => '23.45.10',
                'versions'        => array('2.1.*', '2.1.1'),
                'expectedVersion' => false
            ),
            array(
                'version'         => '23.45.10-b1',
                'versions'        => array('23.*', '23.45.10', '23.45.*'),
                'expectedVersion' => '23.45.10'
            ),
        );
    }
}
